/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_GSMENGINE_H
#define _MOCK_GSMENGINE_H

#include "gsmEngine.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_gsmEngine_Init(void);
void mock_gsmEngine_Destroy(void);
void mock_gsmEngine_Verify(void);




#define gsmInitEngine_IgnoreAndReturn(cmock_retval) gsmInitEngine_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gsmInitEngine_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define gsmInitEngine_ExpectAndReturn(engine, cmock_retval) gsmInitEngine_CMockExpectAndReturn(__LINE__, engine, cmock_retval)
void gsmInitEngine_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gsmEngine_t* engine, _Bool cmock_to_return);
typedef _Bool (* CMOCK_gsmInitEngine_CALLBACK)(gsmEngine_t* engine, int cmock_num_calls);
void gsmInitEngine_StubWithCallback(CMOCK_gsmInitEngine_CALLBACK Callback);
#define gsmProcessTkn_IgnoreAndReturn(cmock_retval) gsmProcessTkn_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gsmProcessTkn_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, fsmEvent_e cmock_to_return);
#define gsmProcessTkn_ExpectAndReturn(engine, cmock_retval) gsmProcessTkn_CMockExpectAndReturn(__LINE__, engine, cmock_retval)
void gsmProcessTkn_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gsmEngine_t* engine, fsmEvent_e cmock_to_return);
typedef fsmEvent_e (* CMOCK_gsmProcessTkn_CALLBACK)(gsmEngine_t* engine, int cmock_num_calls);
void gsmProcessTkn_StubWithCallback(CMOCK_gsmProcessTkn_CALLBACK Callback);
#define gsmToutCntZero_IgnoreAndReturn(cmock_retval) gsmToutCntZero_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gsmToutCntZero_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define gsmToutCntZero_ExpectAndReturn(engine, cmock_retval) gsmToutCntZero_CMockExpectAndReturn(__LINE__, engine, cmock_retval)
void gsmToutCntZero_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gsmEngine_t* engine, _Bool cmock_to_return);
typedef _Bool (* CMOCK_gsmToutCntZero_CALLBACK)(gsmEngine_t* engine, int cmock_num_calls);
void gsmToutCntZero_StubWithCallback(CMOCK_gsmToutCntZero_CALLBACK Callback);
#define gsmDecToutCnt_Ignore() gsmDecToutCnt_CMockIgnore()
void gsmDecToutCnt_CMockIgnore(void);
#define gsmDecToutCnt_Expect(engine) gsmDecToutCnt_CMockExpect(__LINE__, engine)
void gsmDecToutCnt_CMockExpect(UNITY_LINE_TYPE cmock_line, gsmEngine_t* engine);
typedef void (* CMOCK_gsmDecToutCnt_CALLBACK)(gsmEngine_t* engine, int cmock_num_calls);
void gsmDecToutCnt_StubWithCallback(CMOCK_gsmDecToutCnt_CALLBACK Callback);
#define gsmPrintData_Ignore() gsmPrintData_CMockIgnore()
void gsmPrintData_CMockIgnore(void);
#define gsmPrintData_Expect() gsmPrintData_CMockExpect(__LINE__)
void gsmPrintData_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_gsmPrintData_CALLBACK)(int cmock_num_calls);
void gsmPrintData_StubWithCallback(CMOCK_gsmPrintData_CALLBACK Callback);
#define gsmSendCmd_IgnoreAndReturn(cmock_retval) gsmSendCmd_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gsmSendCmd_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, fsmEvent_e cmock_to_return);
#define gsmSendCmd_ExpectAndReturn(engine, cmdStr, cmock_retval) gsmSendCmd_CMockExpectAndReturn(__LINE__, engine, cmdStr, cmock_retval)
void gsmSendCmd_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gsmEngine_t* engine, const uint8_t* cmdStr, fsmEvent_e cmock_to_return);
typedef fsmEvent_e (* CMOCK_gsmSendCmd_CALLBACK)(gsmEngine_t* engine, const uint8_t* cmdStr, int cmock_num_calls);
void gsmSendCmd_StubWithCallback(CMOCK_gsmSendCmd_CALLBACK Callback);
#define gsmGetCmdRsp_IgnoreAndReturn(cmock_retval) gsmGetCmdRsp_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gsmGetCmdRsp_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, rsp_t cmock_to_return);
#define gsmGetCmdRsp_ExpectAndReturn(engine, cmock_retval) gsmGetCmdRsp_CMockExpectAndReturn(__LINE__, engine, cmock_retval)
void gsmGetCmdRsp_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gsmEngine_t* engine, rsp_t cmock_to_return);
typedef rsp_t (* CMOCK_gsmGetCmdRsp_CALLBACK)(gsmEngine_t* engine, int cmock_num_calls);
void gsmGetCmdRsp_StubWithCallback(CMOCK_gsmGetCmdRsp_CALLBACK Callback);
#define gsmGetNoCmdRsp_IgnoreAndReturn(cmock_retval) gsmGetNoCmdRsp_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gsmGetNoCmdRsp_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define gsmGetNoCmdRsp_ExpectAndReturn(engine, cmock_retval) gsmGetNoCmdRsp_CMockExpectAndReturn(__LINE__, engine, cmock_retval)
void gsmGetNoCmdRsp_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gsmEngine_t* engine, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_gsmGetNoCmdRsp_CALLBACK)(gsmEngine_t* engine, int cmock_num_calls);
void gsmGetNoCmdRsp_StubWithCallback(CMOCK_gsmGetNoCmdRsp_CALLBACK Callback);
#define gsmGetUrc_IgnoreAndReturn(cmock_retval) gsmGetUrc_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gsmGetUrc_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, rsp_t cmock_to_return);
#define gsmGetUrc_ExpectAndReturn(engine, cmock_retval) gsmGetUrc_CMockExpectAndReturn(__LINE__, engine, cmock_retval)
void gsmGetUrc_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gsmEngine_t* engine, rsp_t cmock_to_return);
typedef rsp_t (* CMOCK_gsmGetUrc_CALLBACK)(gsmEngine_t* engine, int cmock_num_calls);
void gsmGetUrc_StubWithCallback(CMOCK_gsmGetUrc_CALLBACK Callback);
#define gsmGetSerialMode_IgnoreAndReturn(cmock_retval) gsmGetSerialMode_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gsmGetSerialMode_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, serialMode_e cmock_to_return);
#define gsmGetSerialMode_ExpectAndReturn(engine, cmock_retval) gsmGetSerialMode_CMockExpectAndReturn(__LINE__, engine, cmock_retval)
void gsmGetSerialMode_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gsmEngine_t* engine, serialMode_e cmock_to_return);
typedef serialMode_e (* CMOCK_gsmGetSerialMode_CALLBACK)(gsmEngine_t* engine, int cmock_num_calls);
void gsmGetSerialMode_StubWithCallback(CMOCK_gsmGetSerialMode_CALLBACK Callback);
#define gsmSetSerialMode_IgnoreAndReturn(cmock_retval) gsmSetSerialMode_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gsmSetSerialMode_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define gsmSetSerialMode_ExpectAndReturn(engine, mode, cmock_retval) gsmSetSerialMode_CMockExpectAndReturn(__LINE__, engine, mode, cmock_retval)
void gsmSetSerialMode_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gsmEngine_t* engine, serialMode_e mode, _Bool cmock_to_return);
typedef _Bool (* CMOCK_gsmSetSerialMode_CALLBACK)(gsmEngine_t* engine, serialMode_e mode, int cmock_num_calls);
void gsmSetSerialMode_StubWithCallback(CMOCK_gsmSetSerialMode_CALLBACK Callback);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
